
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


import java.io.File;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JPanel;

import BottomPanel.MyMouseListener;

public class TopMenu extends JPanel {

	JButton lineBtn, circleBtn, triangleBtn, squareBtn, polygonBtn,
			colorBtn, fillBtn;
	JPanel bottomPanel = new JPanel();

	// variables
	int buttonChoice = 1;
	boolean fillOrOutline = true;
	Color color = Color.BLUE;
	
	//======================
	JButton undoBtn, resetBtn, loadBtn, saveBtn,brushSizeBig, brushSizeSmall;
	ArrayList<MyShape> shapes = new ArrayList<MyShape>();
	ArrayList<Color> colours = new ArrayList<Color>();
	ArrayList<Integer> brushSizesList = new ArrayList<Integer>();
	ArrayList<Boolean> fillList = new ArrayList<Boolean>();
	Integer strokeSize = 1;
	
	FileDialog fDialogSave = new FileDialog(new Frame(),"Save", FileDialog.SAVE);
	String pathSave = fDialogSave.getDirectory()+ fDialogSave.getFile();
	FileDialog fDialogLoad = new FileDialog(new Frame(),"Load", FileDialog.LOAD);
	String pathLoad = fDialogLoad.getDirectory()+ fDialogLoad.getFile();
	File f = new File(pathSave);
	
	

	public TopMenu() {
		// TODO Auto-generated constructor stub
		Dimension size = getPreferredSize();
		size.width = 500;
		size.height = 40;
		setPreferredSize(size);
		addButtonsToMenuPanel(); // adding the buttons to the Panel
		// Set the layout of the panel
		setLayout(new FlowLayout()); // border Layout for the Buttons
		//setBackground(Color.G);
		setVisible(true);
		add(bottomPanel,  BorderLayout.SOUTH);
	}

	/**
	 * method to add things to the panel TODO Adding PAnel parts
	 */
	void addButtonsToMenuPanel() {
		lineBtn = new JButton("Line");
		lineBtn.addActionListener(new MyMouseListener());
		circleBtn = new JButton("Circle");
		circleBtn.addActionListener(new MyMouseListener());
		squareBtn = new JButton("Square");
		squareBtn.addActionListener(new MyMouseListener());
		triangleBtn = new JButton("Triangle");
		triangleBtn.addActionListener(new MyMouseListener());
		polygonBtn = new JButton("Polygon");
		polygonBtn.addActionListener(new MyMouseListener());
		colorBtn = new JButton("Colour");
		colorBtn.addActionListener(new MyMouseListener());
		fillBtn = new JButton("Outline");
		fillBtn.addActionListener(new MyMouseListener());
		undoBtn = new JButton("Undo");
		undoBtn.addActionListener(new MyMouseListener());
		resetBtn = new JButton("Reset");
		resetBtn.addActionListener(new MyMouseListener());
		loadBtn = new JButton("Load");
		loadBtn.addActionListener(new MyMouseListener());
		saveBtn = new JButton("Save");
		saveBtn.addActionListener(new MyMouseListener());
		brushSizeBig = new JButton("Bigger");
		brushSizeBig.addActionListener(new MyMouseListener());
		brushSizeSmall = new JButton("Smaller");
		brushSizeSmall.addActionListener(new MyMouseListener());
		add(lineBtn);
		add(circleBtn);
		add(squareBtn);
		add(triangleBtn);
		add(polygonBtn);
		add(colorBtn);
		add(fillBtn);
		//
		bottomPanel.add(undoBtn);
		bottomPanel.add(resetBtn);
		bottomPanel.add(loadBtn);
		bottomPanel.add(saveBtn);
		bottomPanel.add(brushSizeBig);
		bottomPaneladd(brushSizeSmall);

	} // end of constructor

	/**
	 * Action Listener to determine which shape to draw
	 * 
	 */
	private class MyMouseListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent e) {
			if (e.getSource() instanceof JButton) {
				if (e.getSource() == lineBtn) {
					buttonChoice = 1;
				} else if (e.getSource() == circleBtn) {
					buttonChoice = 2;
				} else if (e.getSource() == squareBtn) {
					buttonChoice = 3;
				} else if (e.getSource() == triangleBtn) {
					buttonChoice = 4;
				} else if (e.getSource() == polygonBtn) {
					buttonChoice = 5;
				}else if(e.getSource() == fillBtn){
					if(fillOrOutline == true){
						fillOrOutline = false;
						fillBtn.setText("Fill");
					}else{
						fillOrOutline = true;
						fillBtn.setText("Outline");
					}
				}else if(e.getSource() == colorBtn){
					color = JColorChooser.showDialog(null, "Choose a Colour", color);

				}

			}
		}
	}// end of MyMouseLsitener
}
